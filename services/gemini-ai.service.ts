import { GoogleGenerativeAI } from "@google/generative-ai";

export interface UserContext {
  userId?: string;
  name?: string;
  email?: string;
  dueDate?: string;
  babyGender?: "boy" | "girl" | "unknown";
  currentWeek?: number;
  daysBeforePregnant?: number;
  weekInfo?: {
    babySize?: number;
    babyWeight?: number;
    babyActivity?: string;
    babyDevelopment?: string;
    momHint?: string;
  };
  emotions?: Array<{
    _id: string;
    name: string;
    date?: string;
  }>;
  tasks?: Array<{
    _id?: string;
    name: string;
    isDone: boolean;
    date: string;
  }>;
  diaryEntries?: Array<{
    _id?: string;
    title: string;
    description: string;
    emotions: Array<{ _id: string; name?: string }> | string[];
    date: string;
  }>;
}

export interface AIResponse {
  content: string;
  suggestions?: string[];
  relatedTopics?: string[];
  timestamp: Date;
  contextUsed?: Partial<UserContext>;
  type: "advice" | "reminder" | "insight" | "motivation" | "general";
}

export class GeminiAIService {
  private genAI: GoogleGenerativeAI;
  private model: any;
  private userContext: UserContext | null = null;
  private isAuthenticated: boolean = false;

  constructor(apiKey: string) {
    this.genAI = new GoogleGenerativeAI(apiKey);
    this.model = this.genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
  }

  public updateUserContext(context: UserContext | null): void {
    this.userContext = context;
    this.isAuthenticated = !!context?.userId;
  }

  private calculatePregnancyWeek(dueDate?: string): number {
    if (!dueDate) return 20;
    const due = new Date(dueDate);
    const today = new Date();
    const diffTime = due.getTime() - today.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    const weeksRemaining = Math.floor(diffDays / 7);
    return Math.max(1, Math.min(40, 40 - weeksRemaining));
  }

  private analyzeEmotionalState(): string {
    if (!this.userContext?.emotions || this.userContext.emotions.length === 0) {
      return "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π";
    }

    const recentEmotions = this.userContext.emotions.slice(-7);
    const emotionFrequency: Record<string, number> = {};

    recentEmotions.forEach((emotion) => {
      emotionFrequency[emotion.name] =
        (emotionFrequency[emotion.name] || 0) + 1;
    });

    const dominantEmotion = Object.entries(emotionFrequency).sort(
      ([, a], [, b]) => b - a
    )[0];

    return dominantEmotion ? dominantEmotion[0] : "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π";
  }

  private getContextualInfo(): string {
    if (!this.isAuthenticated || !this.userContext) {
      return "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫–∞ —Ü—ñ–∫–∞–≤–∏—Ç—å—Å—è —Ç–µ–º–æ—é –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞ —Ç–∞ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ.";
    }

    const currentWeek =
      this.userContext.currentWeek ||
      this.calculatePregnancyWeek(this.userContext.dueDate);

    let contextInfo = `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫–∞ ${this.userContext.name} –Ω–∞ ${currentWeek} —Ç–∏–∂–Ω—ñ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ.`;

    if (this.userContext.weekInfo?.momHint) {
      contextInfo += ` –ü–æ—Ç–æ—á–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó: ${this.userContext.weekInfo.momHint}`;
    }

    if (this.userContext.tasks && this.userContext.tasks.length > 0) {
      const incompleteTasks = this.userContext.tasks.filter((t) => !t.isDone);
      if (incompleteTasks.length > 0) {
        contextInfo += ` –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è: ${incompleteTasks
          .map((t) => t.name)
          .slice(0, 3)
          .join(", ")}.`;
      }
    }

    const emotionalState = this.analyzeEmotionalState();
    if (emotionalState !== "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π") {
      contextInfo += ` –ü–æ—Ç–æ—á–Ω–∏–π –µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω: ${emotionalState}.`;
    }

    return contextInfo;
  }

  public async freeConversation(message: string): Promise<AIResponse> {
    const contextInfo = this.getContextualInfo();

    const prompt = `
      –¢–∏ - –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∑ –ø–∏—Ç–∞–Ω—å –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞ —Ç–∞ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ, —è–∫–∏–π –Ω–∞–¥–∞—î 
      –∫–æ—Ä–æ—Ç–∫—É, –∫–æ—Ä–∏—Å–Ω—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø–æ—Ä–∞–¥–∏ –º–∞–π–±—É—Ç–Ω—ñ–º –º–∞–º–∞–º.
      
      ${contextInfo}
      
      –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫–∏: ${message}
      
      –î–∞–π –∫–æ—Ä–æ—Ç–∫—É (–º–∞–∫—Å–∏–º—É–º 150 —Å–ª—ñ–≤), —Ç–µ–ø—Ä—É —Ç–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
      –Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è:
      - –ú–µ–¥–∏—á–Ω–∏—Ö –∞—Å–ø–µ–∫—Ç—ñ–≤ - –¥–∞–π –∑–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∞ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ –ª—ñ–∫–∞—Ä–µ–º
      - –ï–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Å—Ç–∞–Ω—É - –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ç–µ—Ö–Ω—ñ–∫–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏
      - –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞ - –¥–∞–π –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏
      - –î–æ–≥–ª—è–¥—É –∑–∞ –¥–∏—Ç–∏–Ω–æ—é - –ø–æ–¥—ñ–ª–∏—Å—å –∫–æ—Ä–∏—Å–Ω–∏–º–∏ –ø–æ—Ä–∞–¥–∞–º–∏
      
      –¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏:
      1. –ï–º–ø–∞—Ç–∏—á–Ω–æ—é —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–æ—é
      2. –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—é —Ç–∞ –∫–æ—Ä–∏—Å–Ω–æ—é
      3. –ë–µ–∑–ø–µ—á–Ω–æ—é (–∑–∞–≤–∂–¥–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ –ª—ñ–∫–∞—Ä–µ–º –¥–ª—è –º–µ–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å)
    `;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return {
        content: text,
        suggestions: this.generateQuickReplies(),
        relatedTopics: this.generateGeneralTopics(),
        timestamp: new Date(),
        contextUsed: this.isAuthenticated
          ? {
              name: this.userContext?.name,
              currentWeek: this.userContext?.currentWeek,
            }
          : undefined,
        type: "general",
      };
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–ª—å–Ω–æ—ó –±–µ—Å—ñ–¥–∏:", error);
      throw error;
    }
  }

  public async generateWelcomeForGuest(): Promise<AIResponse> {
    const prompt = `
      –°—Ç–≤–æ—Ä–∏ –∫–æ—Ä–æ—Ç–∫–µ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–º–∞–∫—Å–∏–º—É–º 80 —Å–ª—ñ–≤) –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫–∏, —è–∫–∞ —Ü—ñ–∫–∞–≤–∏—Ç—å—Å—è 
      —Ç–µ–º–æ—é –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞ —Ç–∞ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ. 
      
      –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é –Ω–∞–ø–∏—à–∏:
      1. –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
      2. –ö–æ—Ä–æ—Ç–∫–æ –ø—Ä–æ —Ç–µ, —á–∏–º —Ç–∏ –º–æ–∂–µ—à –¥–æ–ø–æ–º–æ–≥—Ç–∏
      3. –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è
      
      –¢–æ–Ω: —Ç–µ–ø–ª–∏–π, –¥—Ä—É–∂–Ω—ñ–π, –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–π.
    `;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return {
        content: text,
        suggestions: [
          "–†–æ–∑–∫–∞–∂–∏ –ø—Ä–æ –ø–µ—Ä—à–∏–π —Ç—Ä–∏–º–µ—Å—Ç—Ä",
          "–Ø–∫—ñ –≤—ñ—Ç–∞–º—ñ–Ω–∏ –≤–∞–∂–ª–∏–≤—ñ?",
          "–Ø–∫ –≤–ø–æ—Ä–∞—Ç–∏—Å—è –∑ —Ç–æ–∫—Å–∏–∫–æ–∑–æ–º?",
          "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –ø–æ–ª–æ–≥—ñ–≤",
          "–î–æ–≥–ª—è–¥ –∑–∞ –Ω–æ–≤–æ–Ω–∞—Ä–æ–¥–∂–µ–Ω–∏–º",
        ],
        relatedTopics: this.generateGeneralTopics(),
        timestamp: new Date(),
        type: "general",
      };
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:", error);
      throw error;
    }
  }

  public async generatePersonalizedAdvice(): Promise<AIResponse> {
    if (!this.userContext || !this.isAuthenticated) {
      return this.generateWelcomeForGuest();
    }

    const currentWeek =
      this.userContext.currentWeek ||
      this.calculatePregnancyWeek(this.userContext.dueDate);
    const emotionalState = this.analyzeEmotionalState();

    const prompt = `
      –¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –≤–∞–≥—ñ—Ç–Ω–∏—Ö –∂—ñ–Ω–æ–∫. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫–∞ ${this.userContext.name || "–º–∞–π–±—É—Ç–Ω–∞ –º–∞–º–∞"} 
      –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ ${currentWeek} —Ç–∏–∂–Ω—ñ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ.
      
      –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∫—É:
      - –°—Ç–∞—Ç—å –¥–∏—Ç–∏–Ω–∏: ${
        this.userContext.babyGender === "boy"
          ? "—Ö–ª–æ–ø—á–∏–∫"
          : this.userContext.babyGender === "girl"
            ? "–¥—ñ–≤—á–∏–Ω–∫–∞"
            : "—â–µ –Ω–µ –≤—ñ–¥–æ–º–æ"
      }
      - –ü–æ—Ç–æ—á–Ω–∏–π –µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω: ${emotionalState}
      - –¢–µ—Ä–º—ñ–Ω –ø–æ–ª–æ–≥—ñ–≤: ${this.userContext.dueDate || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}
      ${this.userContext.weekInfo?.momHint ? `- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ç–∏–∂–Ω—è: ${this.userContext.weekInfo.momHint}` : ""}
      
      –°—Ç–≤–æ—Ä–∏ –∫–æ—Ä–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—É –ø–æ—Ä–∞–¥—É (–º–∞–∫—Å–∏–º—É–º 120 —Å–ª—ñ–≤) —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é:
      1. –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑ —ñ–º'—è–º
      2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é –¥–ª—è ${currentWeek} —Ç–∏–∂–Ω—è –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ
      3. –ü–æ—Ä–∞–¥–∏ —â–æ–¥–æ –µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
      4. –ö–æ—Ä–∏—Å–Ω—ñ –≤–ø—Ä–∞–≤–∏ –∞–±–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
      
      –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —Ç–µ–ø–ª–æ—é, –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–æ—é —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—é.
    `;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return {
        content: text,
        suggestions: this.extractSuggestions(text),
        relatedTopics: this.generateRelatedTopics(currentWeek),
        timestamp: new Date(),
        contextUsed: {
          currentWeek,
          babyGender: this.userContext.babyGender,
          name: this.userContext.name,
        },
        type: "advice",
      };
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ä–∞–¥–∏:", error);
      throw error;
    }
  }

  public async generateDailyReminders(): Promise<AIResponse> {
    if (!this.userContext || !this.isAuthenticated) {
      return {
        content: `üå∏ –©–æ–¥–µ–Ω–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ—ó –º–∞–º–∏:

‚Ä¢ –ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø–∏—Ç–∏ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≤–æ–¥–∏ - –º—ñ–Ω—ñ–º—É–º 8 —Å–∫–ª—è–Ω–æ–∫ –Ω–∞ –¥–µ–Ω—å
‚Ä¢ –ü—Ä–∏–¥—ñ–ª—ñ—Ç—å 15 —Ö–≤–∏–ª–∏–Ω –ª–µ–≥–∫–∏–º –≤–ø—Ä–∞–≤–∞–º –∞–±–æ –ø—Ä–æ–≥—É–ª—è–Ω—Ü—ñ
‚Ä¢ –ó'—ó–∂—Ç–µ –ø–æ—Ä—Ü—ñ—é —Å–≤—ñ–∂–∏—Ö —Ñ—Ä—É–∫—Ç—ñ–≤ –∞–±–æ –æ–≤–æ—á—ñ–≤
‚Ä¢ –ó—Ä–æ–±—ñ—Ç—å –¥–∏—Ö–∞–ª—å–Ω—ñ –≤–ø—Ä–∞–≤–∏ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞—Ü—ñ—ó
‚Ä¢ –ó–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—ó –¥—É–º–∫–∏ —Ç–∞ –≤—ñ–¥—á—É—Ç—Ç—è –≤ —â–æ–¥–µ–Ω–Ω–∏–∫

–ü–∞–º'—è—Ç–∞–π—Ç–µ: –∫–æ–∂–µ–Ω –¥–µ–Ω—å –≤–∞—à–æ—ó –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ - —Ü–µ –∫—Ä–æ–∫ –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ –∑ –º–∞–ª—é–∫–æ–º!`,
        suggestions: [
          "–†–æ–∑–∫–∞–∂–∏ –±—ñ–ª—å—à–µ –ø—Ä–æ –¥–∏—Ö–∞–ª—å–Ω—ñ –≤–ø—Ä–∞–≤–∏",
          "–Ø–∫—ñ —Ñ—Ä—É–∫—Ç–∏ –Ω–∞–π–∫–æ—Ä–∏—Å–Ωi—à—ñ?",
          "–°–∫—ñ–ª—å–∫–∏ –≤–æ–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Ç–∏?",
        ],
        timestamp: new Date(),
        type: "reminder",
      };
    }

    const incompleteTasks =
      this.userContext.tasks?.filter((t) => !t.isDone) || [];
    const currentWeek =
      this.userContext.currentWeek ||
      this.calculatePregnancyWeek(this.userContext.dueDate);

    const prompt = `
      –°—Ç–≤–æ—Ä–∏ –∫–æ—Ä–æ—Ç–∫—ñ –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∞–≥—ñ—Ç–Ω–æ—ó –∂—ñ–Ω–∫–∏ –Ω–∞ ${currentWeek} —Ç–∏–∂–Ω—ñ.
      
      –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è: ${incompleteTasks.map((t) => t.name).join(", ") || "–Ω–µ–º–∞—î"}
      
      –ó–≥–µ–Ω–µ—Ä—É–π 4-5 –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é –ø—Ä–æ:
      - –í–∞–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –º–µ–¥–∏—á–Ω–∏—Ö –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—å
      - –ó–¥–æ—Ä–æ–≤–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è
      - –§—ñ–∑–∏—á–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
      - –ï–º–æ—Ü—ñ–π–Ω–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á—á—è
      ${incompleteTasks.length > 0 ? "- –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å" : ""}
      
      –ö–æ–∂–Ω–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è - –æ–¥–Ω–µ —Ä–µ—á–µ–Ω–Ω—è. –¢–æ–Ω –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏–π —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–π.
    `;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return {
        content: text,
        suggestions: text
          .split("\n")
          .filter((s: string) => s.trim())
          .slice(0, 3),
        timestamp: new Date(),
        contextUsed: {
          currentWeek,
          tasks: this.userContext.tasks,
        },
        type: "reminder",
      };
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:", error);
      throw error;
    }
  }

  public async analyzeJournalInsights(): Promise<AIResponse> {
    if (
      !this.userContext?.diaryEntries ||
      this.userContext.diaryEntries.length === 0
    ) {
      return {
        content: `üìä –î–ª—è –∞–Ω–∞–ª—ñ–∑—É –≤–∞—à–∏—Ö —ñ–Ω—Å–∞–π—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ –∑–∞–ø–∏—Å—ñ–≤ —É —â–æ–¥–µ–Ω–Ω–∏–∫—É.

–í–µ–¥–µ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–∫–∞ –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ –¥–æ–ø–æ–º–∞–≥–∞—î:
‚Ä¢ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –µ–º–æ—Ü—ñ–π–Ω—ñ –∑–º—ñ–Ω–∏ —Ç–∞ –Ω–∞—Å—Ç—Ä—ñ–π
‚Ä¢ –ó–±–µ—Ä–µ–≥—Ç–∏ —Å–ø–æ–≥–∞–¥–∏ –ø—Ä–æ —Ü–µ–π –æ—Å–æ–±–ª–∏–≤–∏–π –ø–µ—Ä—ñ–æ–¥  
‚Ä¢ –ö—Ä–∞—â–µ —Ä–æ–∑—É–º—ñ—Ç–∏ —Å–≤–æ—ó –ø–æ—á—É—Ç—Ç—è —Ç–∞ –ø–æ—Ç—Ä–µ–±–∏
‚Ä¢ –ü–æ–º—ñ—á–∞—Ç–∏ –ø–∞—Ç–µ—Ä–Ω–∏ —Ç–∞ —Ç—Ä–∏–≥–µ—Ä–∏ –µ–º–æ—Ü—ñ–π
‚Ä¢ –î—ñ–ª–∏—Ç–∏—Å—è –¥–æ—Å–≤—ñ–¥–æ–º –∑ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –∞–±–æ –ª—ñ–∫–∞—Ä–µ–º

–°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏:
- –§—ñ–∑–∏—á–Ω—ñ –≤—ñ–¥—á—É—Ç—Ç—è —Ç–∞ –∑–º—ñ–Ω–∏
- –ï–º–æ—Ü—ñ—ó —Ç–∞ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–Ω—è
- –ü–µ—Ä—à—ñ —Ä—É—Ö–∏ –º–∞–ª—é–∫–∞
- –í–∞–∂–ª–∏–≤—ñ –º–æ–º–µ–Ω—Ç–∏ —Ç–∞ –¥—É–º–∫–∏
- –ü–∏—Ç–∞–Ω–Ω—è –¥–ª—è –ª—ñ–∫–∞—Ä—è`,
        suggestions: [
          "–ü—Ä–æ —â–æ –ø–∏—Å–∞—Ç–∏ –≤ —â–æ–¥–µ–Ω–Ω–∏–∫—É?",
          "–Ø–∫ —á–∞—Å—Ç–æ –≤–µ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏?",
          "–Ø–∫—ñ –µ–º–æ—Ü—ñ—ó –Ω–æ—Ä–º–∞–ª—å–Ω—ñ –ø—ñ–¥ —á–∞—Å –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ?",
        ],
        relatedTopics: ["–µ–º–æ—Ü—ñ–π–Ω–µ –∑–¥–æ—Ä–æ–≤'—è", "–≤–µ–¥–µ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–∫–∞", "—Å–∞–º–æ–∞–Ω–∞–ª—ñ–∑"],
        timestamp: new Date(),
        type: "insight",
      };
    }

    const recentEntries = this.userContext.diaryEntries.slice(-7);

    const prompt = `
      –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω –≤–∞–≥—ñ—Ç–Ω–æ—ó –∂—ñ–Ω–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ó—ó —â–æ–¥–µ–Ω–Ω–∏–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤.
      
      –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∏:
      ${recentEntries
        .map((entry) => {
          const emotions = Array.isArray(entry.emotions)
            ? entry.emotions
                .map((e) => (typeof e === "string" ? e : e.name || e._id))
                .join(", ")
            : "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ";
          return `${entry.date}: ${entry.title} - –ï–º–æ—Ü—ñ—ó: ${emotions}`;
        })
        .join("\n")}
      
      –ù–∞–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é (–º–∞–∫—Å–∏–º—É–º 120 —Å–ª—ñ–≤):
      1. –ö–æ—Ä–æ—Ç–∫–∏–π –∞–Ω–∞–ª—ñ–∑ –µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Å—Ç–∞–Ω—É (2-3 —Ä–µ—á–µ–Ω–Ω—è)
      2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è
      3. –¢–µ—Ö–Ω—ñ–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü—ñ—ó –∞–±–æ mindfulness –≤–ø—Ä–∞–≤–∏
      
      –¢–æ–Ω –º–∞—î –±—É—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–º —Ç–∞ –µ–º–ø–∞—Ç–∏—á–Ω–∏–º.
    `;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return {
        content: text,
        relatedTopics: [
          "–µ–º–æ—Ü—ñ–π–Ω–µ –∑–¥–æ—Ä–æ–≤'—è",
          "—Ç–µ—Ö–Ω—ñ–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü—ñ—ó",
          "mindfulness",
        ],
        timestamp: new Date(),
        contextUsed: {
          diaryEntries: recentEntries,
        },
        type: "insight",
      };
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É —â–æ–¥–µ–Ω–Ω–∏–∫–∞:", error);
      throw error;
    }
  }

  public async answerQuestion(question: string): Promise<AIResponse> {
    return this.freeConversation(question);
  }

  private extractSuggestions(text: string): string[] {
    const lines = text.split("\n").filter((line) => line.trim());
    const suggestions = lines
      .filter((line) => line.match(/^\d+\.|^-|^‚Ä¢/))
      .map((line) => line.replace(/^\d+\.|^-|^‚Ä¢/, "").trim())
      .slice(0, 5);
    return suggestions.length > 0 ? suggestions : this.generateQuickReplies();
  }

  private generateQuickReplies(): string[] {
    const generalQuestions = [
      "–Ø–∫—ñ –≤—ñ—Ç–∞–º—ñ–Ω–∏ –≤–∞–∂–ª–∏–≤—ñ –ø—ñ–¥ —á–∞—Å –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ?",
      "–Ø–∫ –≤–ø–æ—Ä–∞—Ç–∏—Å—è –∑ —Ä–∞–Ω–∫–æ–≤–æ—é –Ω—É–¥–æ—Ç–æ—é?",
      "–Ø–∫—ñ –≤–ø—Ä–∞–≤–∏ –±–µ–∑–ø–µ—á–Ω—ñ –¥–ª—è –≤–∞–≥—ñ—Ç–Ω–∏—Ö?",
      "–Ø–∫ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—è –¥–æ –ø–æ–ª–æ–≥—ñ–≤?",
      "–©–æ –≤–∑—è—Ç–∏ –≤ –ø–æ–ª–æ–≥–æ–≤–∏–π –±—É–¥–∏–Ω–æ–∫?",
      "–Ø–∫ –∑–º–µ–Ω—à–∏—Ç–∏ –Ω–∞–±—Ä—è–∫–∏?",
      "–©–æ —Ä–æ–±–∏—Ç–∏ –ø—Ä–∏ –±–µ–∑—Å–æ–Ω–Ω—ñ?",
      "–Ø–∫—ñ –∞–Ω–∞–ª—ñ–∑–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–¥–∞–≤–∞—Ç–∏?",
    ];

    const shuffled = generalQuestions.sort(() => 0.5 - Math.random());
    return shuffled.slice(0, Math.floor(Math.random() * 3) + 3);
  }

  private generateGeneralTopics(): string[] {
    return [
      "–•–∞—Ä—á—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ",
      "–§—ñ–∑–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏ –¥–ª—è –≤–∞–≥—ñ—Ç–Ω–∏—Ö",
      "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –ø–æ–ª–æ–≥—ñ–≤",
      "–î–æ–≥–ª—è–¥ –∑–∞ –Ω–æ–≤–æ–Ω–∞—Ä–æ–¥–∂–µ–Ω–∏–º",
      "–ï–º–æ—Ü—ñ–π–Ω–µ –∑–¥–æ—Ä–æ–≤'—è",
    ];
  }

  private generateRelatedTopics(week: number): string[] {
    const topics = [
      `–†–æ–∑–≤–∏—Ç–æ–∫ –¥–∏—Ç–∏–Ω–∏ –Ω–∞ ${week} —Ç–∏–∂–Ω—ñ`,
      "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –ø–æ–ª–æ–≥—ñ–≤",
      "–•–∞—Ä—á—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ",
      "–§—ñ–∑–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏ –¥–ª—è –≤–∞–≥—ñ—Ç–Ω–∏—Ö",
      "–ï–º–æ—Ü—ñ–π–Ω–µ –∑–¥–æ—Ä–æ–≤'—è",
    ];

    if (week >= 28) {
      topics.push("–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ—á–µ–π –¥–ª—è –ø–æ–ª–æ–≥–æ–≤–æ–≥–æ –±—É–¥–∏–Ω–∫—É");
    }
    if (week >= 35) {
      topics.push("–û–∑–Ω–∞–∫–∏ –ø–æ—á–∞—Ç–∫—É –ø–æ–ª–æ–≥—ñ–≤");
    }

    return topics.slice(0, 5);
  }
}
